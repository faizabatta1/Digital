module SearchAndReverse (CLK, Reset,enable,X,D , Q);
 input CLK, Reset,enable;
  input [3:0] X;
  input [19:0]D;
  output reg [19:0] Q;
  
  reg [3:0] XI;
  reg [19:0] DI;
  integer i;
  
always @(posedge CLK)
begin
  
  if (Reset==1)
begin
  Q[19:0] <= 20'b00000000000000000000;
end
     
  
  if (enable==1 &&Reset==0 &&enable==1)
begin
  XI[3:0] <= X[3:0];
  DI[19:0] <= D[19:0];
  
  if(DI[0]==XI[0] && DI[1]==XI[1] && DI[2]==XI[2] && DI[3]==XI[3])begin 
    DI[0]<=DI[3];
    DI[1]<=DI[2];
    DI[2]<=DI[1];
    DI[3]<=DI[0];
    end //if 
  
  if(DI[1]==XI[0] && DI[2]==XI[1] && DI[3]==XI[2] && DI[4]==XI[3])begin 
     
    DI[1]=DI[4];
    DI[2]=DI[3];
    DI[3]=DI[2];
    DI[4]=DI[1];
    end //if 
    
  if( DI[2]==XI[0] && DI[3]==XI[1] && DI[4]==XI[2]&& DI[5]==XI[3])begin 
     
    DI[2]<=DI[5];
    DI[3]<=DI[4];
    DI[4]<=DI[3];
    DI[5]<=DI[2];
    end //if 
  if( DI[3]==XI[0] && DI[4]==XI[1]&& DI[5]==XI[2]&& DI[6]==XI[3])begin 
      
    DI[3]<=DI[6];
    DI[4]<=DI[5];
    DI[5]<=DI[4];
    DI[6]<=DI[3];
    end //if 
  
  if( DI[4]==XI[0]&& DI[5]==XI[1]&& DI[6]==XI[2]&& DI[7]==XI[3])begin 
      
      
    DI[4]<=DI[7];
    DI[5]<=DI[6];
    DI[6]<=DI[5];
    DI[7]<=DI[4];
    end //if 
  if( DI[5]==XI[0]&& DI[6]==XI[1]&& DI[7]==XI[2]&& DI[8]==XI[3])begin    
     
    DI[5]<=DI[8];
    DI[6]<=DI[7];
    DI[7]<=DI[6];  
    DI[8]<=DI[5];
    end //if 
  
  if( DI[6]==XI[0]&& DI[7]==XI[1]&& DI[8]==XI[2]&& DI[9]==XI[3])begin   
    DI[6]<=DI[9];
    DI[7]<=DI[8];  
    DI[8]<=DI[7];
    DI[9]<=DI[6];
    end //if 
  if( DI[7]==XI[0]&& DI[8]==XI[1]&& DI[9]==XI[2]&& DI[10]==XI[3])begin 
    DI[7]<=DI[10];  
    DI[8]<=DI[9];
    DI[9]<=DI[8];
    DI[10]<=DI[7];
    end //if 
  if( DI[8]==XI[0]&& DI[9]==XI[1]&& DI[10]==XI[2]&& DI[11]==XI[3])begin  
    DI[8]<=DI[11];
    DI[9]<=DI[10];
    DI[10]<=DI[9];
    DI[11]<=DI[8]; 
    end //if 
  if( DI[9]==XI[0]&& DI[10]==XI[1]&& DI[11]==XI[2]&& DI[12]==XI[3])begin 
    DI[9]<=DI[12];
    DI[10]<=DI[11];
    DI[11]<=DI[10];     
    DI[12]<=DI[9];
    end //if 
  if(DI[10]==XI[0]&& DI[11]==XI[1]&& DI[12]==XI[2]&& DI[13]==XI[3])begin 
    
    DI[10]<=DI[13];
    DI[11]<=DI[12];     
    DI[12]<=DI[11];
    DI[13]<=DI[10];
    end //if 
  if( DI[11]==XI[0]&& DI[12]==XI[1]&& DI[13]==XI[2]&& DI[14]==XI[3])begin  
    DI[11]<=DI[14];     
    DI[12]<=DI[13];
    DI[13]<=DI[12];
    DI[14]<=DI[1];
    end //if 
  if ( DI[12]==XI[0]&& DI[13]==XI[1]&& DI[14]==XI[2]&& DI[15]==XI[3])begin  
        
    DI[12]<=DI[15];
    DI[13]<=DI[14];
    DI[14]<=DI[13];
    DI[15]<=DI[12];
    end //if 
  if (DI[13]==XI[0]&& DI[14]==XI[1]&& DI[15]==XI[2]&& DI[16]==XI[3])begin  
    DI[13]<=DI[16];
    DI[14]<=DI[15];
    DI[15]<=DI[14];
    DI[16]<=DI[13];
    end //if 
  if (DI[14]==XI[0]&& DI[15]==XI[1]&& DI[16]==XI[2]&& DI[17]==XI[3])begin 
    DI[14]<=DI[17];
    DI[15]<=DI[16];
    DI[16]<=DI[15];
    DI[17]<=DI[14];
    end //if 
  if (DI[15]==XI[0]&& DI[16]==XI[1]&& DI[17]==XI[2]&& DI[18]==XI[3])begin
    DI[15]<=DI[18];
    DI[16]<=DI[17];
    DI[17]<=DI[16];
    DI[18]<=DI[15];
    end //if 
  if (DI[16]==XI[0]&& DI[17]==XI[1]&& DI[18]==XI[2]&& DI[19]==XI[3])begin
    DI[16]<=DI[19];
    DI[17]<=DI[18];
    DI[18]<=DI[17];
    DI[19]<=DI[16];
    end //if 

  
  assign Q= DI;
   
end

end 
  
  
endmodule